/// <reference types="dcl" />
/// <reference types="env" />
import { VLMBase } from "./VLMBaseConfig.component";
import { SimpleTransform, Transformable } from "../shared/interfaces";
export declare namespace VLMNFT {
    const configs: {
        [uuid: string]: DCLConfig;
    };
    const instances: {
        [uuid: string]: DCLInstanceConfig;
    };
    class DCLConfig extends VLMBase.MaterialConfig {
        sk: string;
        customId?: string;
        parent?: string;
        enabled: boolean;
        instanceIds: string[] | any;
        chain: number | string;
        contractAddress: string;
        tokenId: number | string;
        withCollisions: boolean;
        nftLink: string;
        color?: Color3 | string;
        style: PictureFrameStyle;
        constructor(config: VLMConfig);
        updateNft: CallableFunction;
        getChainName: CallableFunction;
        delete: CallableFunction;
        remove: CallableFunction;
        showAll: CallableFunction;
        updateParent: CallableFunction;
        updateCustomId: CallableFunction;
        createInstance: CallableFunction;
        deleteInstance: CallableFunction;
        removeInstance: CallableFunction;
        addInstance: CallableFunction;
    }
    class VLMConfig extends DCLConfig {
        instances: VLMInstanceConfig[];
        color?: string;
        constructor(config: VLMConfig);
    }
    class DCLInstanceConfig extends VLMBase.Instance implements Transformable {
        sk: string;
        customId?: string;
        configId: string;
        parent?: string;
        enabled: boolean;
        position: SimpleTransform;
        scale: SimpleTransform;
        rotation: SimpleTransform;
        withCollisions: boolean;
        config: DCLConfig;
        constructor(config: DCLConfig, instance: VLMInstanceConfig);
        add: CallableFunction;
        delete: CallableFunction;
        remove: CallableFunction;
        updateParent: CallableFunction;
        updateCustomId: CallableFunction;
        updateTransform: CallableFunction;
        updateCollider: CallableFunction;
    }
    class VLMInstanceConfig extends DCLInstanceConfig {
    }
}
//# sourceMappingURL=VLMNFT.component.d.ts.map