/// <reference types="dcl" />
/// <reference types="env" />
import { SimpleTransform, Transformable } from "../shared/interfaces";
export declare namespace VLMBase {
    class MaterialConfig extends Material {
        sk?: string;
        enabled?: boolean;
        name?: string;
        customId?: string;
        parent?: string;
        customRendering?: boolean;
        constructor(config: MaterialConfig);
    }
    class NFTConfig extends NFTShape {
        sk: string;
        enabled: boolean;
        name: string;
        contractAddress?: string;
        tokenId?: string;
        customId?: string;
        parent?: string;
        customRendering?: boolean;
        constructor(config: NFTConfig);
    }
    class AudioConfig extends AudioSource {
        sk: string;
        enabled: boolean;
        name: string;
        customId?: string;
        liveStreamUrl?: string;
        parent?: string;
        customRendering?: boolean;
        constructor(config: AudioConfig);
    }
    class Instance extends Entity implements Transformable {
        sk: string;
        enabled?: boolean;
        name?: string;
        customId?: string;
        customRendering?: boolean;
        configId: string;
        parent?: string;
        position: SimpleTransform;
        rotation: SimpleTransform;
        scale: SimpleTransform;
        constructor(config: MaterialConfig | AudioConfig, instance: Instance);
        updateParent: CallableFunction;
    }
}
//# sourceMappingURL=VLMBaseConfig.component.d.ts.map