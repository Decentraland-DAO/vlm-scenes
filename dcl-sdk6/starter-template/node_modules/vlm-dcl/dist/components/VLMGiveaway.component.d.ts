/// <reference types="env" />
import { VLMNotification } from "./VLMNotification.component";
export declare namespace VLMGiveaway {
    type ClaimResponse = {
        sk?: string;
        headline?: string;
        message?: string;
        messageOptions?: VLMNotification.MessageOptions;
        type: ClaimResponseType;
        reason?: ClaimRejection;
    };
    enum ClaimRejection {
        BEFORE_EVENT_START = 0,
        AFTER_EVENT_END = 1,
        EXISTING_WALLET_CLAIM = 2,
        OVER_IP_LIMIT = 3,
        SUPPLY_DEPLETED = 4,
        INAUTHENTIC = 5,
        SUSPICIOUS = 6
    }
    enum ClaimResponseType {
        CLAIM_ACCEPTED = 0,
        CLAIM_DENIED = 1,
        CLAIM_IN_PROGRESS = 2
    }
    class ClaimPoint {
        sk?: string;
        actionId: string;
        position: {
            x: number;
            y: number;
            z: number;
        };
        scale?: {
            x: number;
            y: number;
            z: number;
        };
        glb?: string;
        image?: string;
        clickDistance?: number;
        rotation?: number;
        hoverText?: string;
        messageColor?: string;
        messageFontSize?: number;
        requestInProgress: boolean;
        constructor(config: ClaimPoint, messageOptions: VLMNotification.MessageOptions);
        claim: CallableFunction;
    }
    class DCLConfig {
        sk: string;
        claimAction: string;
        requestInProgress: boolean;
        messageOptions: VLMNotification.MessageOptions;
        constructor(claimAction: string, messageOptions: VLMNotification.MessageOptions);
        claim: CallableFunction;
        private showMessage;
    }
    class VLMConfig extends DCLConfig {
    }
}
//# sourceMappingURL=VLMGiveaway.component.d.ts.map